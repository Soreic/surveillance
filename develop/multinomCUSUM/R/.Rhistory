clasS(pediastrist)
class(pediastrist)
class(pediastrist)
ls()
class(pediatrist)
rowsumZero
rowsumZero
dfTrain
dfTrain
theta0
theta1
n
apply(o@observed,1,sum)
o@populationFrac
pediatrist@populationFrac
o@populationFrac
apply(o@populationFrac,1,allEqual)
apply(o@populationFrac,1,all.equal)
?all.equal
apply(o@populationFrac,1,identical)
apply(o@populationFrac,1,all)
o@populationFrac
?all
?==
?identical
stsObj <- o
n
n
x
pi0
pi1
range
y
pediatrist@observed
pediatrist@observed[range,,drop=FALSE]
y
c
paediatrist@observed
 pediatrist
 pediatrist@observed
pediatrist@observed
y
n
print(n)
pi0
dim(pi0)
dim(y)
c
c
res
res
control$ret
?all.equal
apply(stsObj@populationFrac[range,],1,function(x) all.equal(x,rev(x)))
stsObj@populationFrac[range,]
apply(stsObj@populationFrac[range,],1,sum)
apply(stsObj@populationFrac[range,],1,function(x) print(x))
apply(stsObj@populationFrac[range,],1,function(x) all.equal(x,rev(x)))
apply(stsObj@populationFrac[range,],1,function(x) all.equal(as.numeric(x),rev(as.numeric(x))))
allTRUE(apply(stsObj@populationFrac[range,],1,function(x) all.equal(as.numeric(x),rev(as.numeric(x)))))
?alltrue
?all
all(apply(stsObj@populationFrac[range,],1,function(x) all.equal(as.numeric(x),rev(as.numeric(x)))))
res$N
length(x)
x
nrow(y)
y
c
res$N
either(ret == 1, res$val[1:res$N] ,res$cases[1:res$N])
either(ret == 1, res$val[1:res$N] ,res$cases[1:res$N])
1:res$N + doneidx
upperbound[1:res$N + doneidx]
upperbound[1:res$N + doneidx,]
      upperbound[1:res$N + doneidx,]  <- either(ret == 1, res$val[1:res$N] ,res$cases[1:res$N])
upperbound[1:res$N + doneidx,]
      alarm[res$N + doneidx,] <- TRUE
      y <- y[,-(1:res$N),drop=FALSE] ; t <- t[-(1:res$N)]
c
y
pi0
pi1
y
t
y
dim(y)
dim(pi0)
dim(pi1)
n
print(n)
fix.dimnames(stsObj)
c
surv@upperbound
surv@upperbound
upperbound
dim(upperbound)
c
surv
surv@upperbound
upperbound
upperbound[1:res$N + doneidx, ]
upperbound[1:res$N + doneidx, ]
upperbound[1:res$N + doneidx, ]
upperbound[,]
upperbound[,] <- 0
upperbound[,]
upperbound[,]
alarm
alarm
surv@upperbound
stsObj@upperbound
stsObj@upperbound[control$range,,drop=FALSE]
control$range
stsObj@alarm
stsObj@upperbound
c
res
doneidx
res$N
c
c
upperbound
ylim
surv@upperbound
surv@populationFrac
q()
n
library("surveillance")
library("nnet")
pediatrist
pediatrist
ls()
paediatrist
pediatrist <- paediatrist
train
pediatrist@observed[train,]
pediatrist@observed
surv[,1]@populationFrac
debug("plot.sts.time")
observed
population
binaryTS
observed/population
pi
upperbound
x@upperbound
c
q()
n
