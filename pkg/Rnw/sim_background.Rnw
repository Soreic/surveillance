@

\name{sim.seasonalNoise}
\alias{sim.seasonalNoise}
\encoding{latin1}

\title{Generation of Background Noise for Simulated Timeseries}
\description{Generation of a cyclic model of a Poisson distribution
as background data for a simulated timevector.

The mean of the Poisson distribution is modelled as:
\deqn{\mu = \exp(A \sin( frequency \cdot \omega \cdot (t + \phi)) + \alpha  + \beta * t +  K * state)}{%
mu = exp(A * sin( frequency * omega * (t + phi)) + alpha  + beta * t +  K * state)}
}
\usage{
    sim.seasonalNoise(A = 1, alpha = 1, beta = 0, phi = 0,
                        length, frequency = 1, state = NULL, K = 0)
}
\arguments{
        \item{A}{amplitude (range of sinus), default = 1.}
        \item{alpha}{parameter to move along the y-axis (negative values not allowed)
                       with alpha > = A, default = 1.}
        \item{beta}{regression coefficient, default = 0.}
        \item{phi}{factor to create seasonal moves
                        (moves the curve along the x-axis), default = 0.}
        \item{length}{number of weeks to model.}
        \item{frequency}{factor to determine the oscillation-frequency, default = 1.}
        \item{state}{if a state chain is entered the outbreaks will be additional
                        weighted by K.}
        \item{K}{additional weigth for an outbreak which influences the distribution
                parameter mu, default = 0.}
}
\value{
        \item{seasonNoise}{Object of class \code{seasonNoise} which includes the modelled
                timevector, the parameter \code{mu} and all input parameters.
        }
}
\seealso{\code{\link{sim.pointSource}}
}
\author{M. Höhle, A. Riebler, C. Lang}
\examples{

    season <- sim.seasonalNoise(length = 300)
    plot(season$seasonalBackground,type = "l")

    # use a negative timetrend beta
    season <- sim.seasonalNoise(beta = -0.003, length = 300)
    plot(season$seasonalBackground,type = "l")

}

\keyword{datagen}

<<echo=F>>=

# 'sim.seasonalNoise' generates a cyclic model of a poisson distribution
# as background data for a simulated timevector.
#
# Parameters:
# A             - amplitude (range of sinus), default = 1
# alpha         - parameter to move along the y-axis
#                       (negative values not allowed)
#                       d.h alpha > = A, default = 1,
# beta          - regression coefficient, default = 0
# season        - factor to create seasonal moves
#                       (moves the curve along the x-axis), default = 0
# length                - number of weeks to model
# frequency     - factor to determine the oscillation-frequency, default = 1
# state        - if a state chain is given, it is weighted by the parameter K
#                       and influences mu
# K             - weight for outbreaks

sim.seasonalNoise <- function(A = 1, alpha = 1, beta = 0, phi = 0,
                                length, frequency = 1, state = NULL, K = 0){

        t <- 1:length

        # constant factor to transform weeks to the appropriate pi-value.
        omega <- 2 * pi/ 52

        # season moves the sin along the x-axis.
        if(is.null(state)){ # no state chain
                mu <- exp(A * sin( frequency * omega * (t + phi)) + alpha  + beta * t)
        }
        else{ # encounter the state chain
                mu <- exp(A * sin( frequency * omega * (t + phi)) +
                                        alpha  + beta * t +  K * state)
        }

        # create the noise as random numbers of the Poisson distribution
        # with parameter mu
        seasonalBackground <- rpois(length, mu) # get random numbers

        result <- list(seasonalBackground = seasonalBackground, t = t,
                                mu = mu, A = A, alpha = alpha,
                                beta = beta, phi = phi,
                                length = length,
                                frequency = frequency, K = K)

        class(result) = "seasonNoise"
        return(result)
}




