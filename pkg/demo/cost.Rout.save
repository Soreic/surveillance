
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## need a writable figs/ directory in getwd()
> ## -> switch to a temporary directory to save figures to
> TMPDIR <- tempdir()
> OWD <- setwd(TMPDIR)
> dir.create("figs")
> 
> 
> ###################################################
> ### chunk number 1: 
> ###################################################
> library("surveillance")
Loading required package: sp
Loading required package: xtable
Loading required package: polyCub
This is surveillance 1.13.0. For overview type ‘help(surveillance)’.
> options(width=70)
> options("prompt"="R> ")
R> set.seed(1234)
R> 
R> opendevice <- function(horizontal=TRUE,width=7,height=4,...) {
+   #Do it for postscript instead  -- who uses postscript these days??
+   args <- list(...)
+   args$file <- sub(".pdf",".eps",args$file)
+   args$width <- width
+   args$height <- height
+   args$horizontal <- FALSE
+   do.call("postscript",args)
+ 
+   par(mar=c(4,4,2,2))
+ }
R> 
R> 
R> 
R> ###################################################
R> ### chunk number 2: K1
R> ###################################################
R> data("ha")
R> plot(aggregate(ha),main="Hepatitis A in Berlin 2001-2006")
R> 
R> 
R> ###################################################
R> ### chunk number 3: 
R> ###################################################
R> opendevice(file="figs/002.pdf")
R> data("ha")
R> plot(aggregate(ha),main="Hepatitis A in Berlin 2001-2006")
R> dev.off()
pdf 
  2 
R> 
R> 
R> ###################################################
R> ### chunk number 4: 
R> ###################################################
R> sps <- sim.pointSource(p = 0.99, r = 0.5, length = 400, 
+      A = 1, alpha = 1, beta = 0, phi = 0, frequency = 1, 
+      state = NULL, K = 1.7)
R> plot(sps,xaxis.years=FALSE)
R> 
R> 
R> ###################################################
R> ### chunk number 5: 
R> ###################################################
R> opendevice(file="figs/003.pdf")
R> plot(sps,xaxis.years=FALSE,legend.opts=list(x="topleft"))
R> dev.off()
pdf 
  2 
R> 
R> 
R> ###################################################
R> ### chunk number 6: HAB662 eval=FALSE
R> ###################################################
R> ## ha.b662 <- algo.bayes(aggregate(ha), control = list(range = 209:290, b = 2, w = 6, alpha = 0.01))
R> ## plot(ha.b662, firstweek=1, startyear = 2005)
R> 
R> 
R> ###################################################
R> ### chunk number 7: 
R> ###################################################
R> ha.b662 <- algo.bayes(aggregate(ha), control = list(range = 209:290, b = 2, w = 6, alpha = 0.01))
R> plot(ha.b662, firstweek=1, startyear = 2005)
R> opendevice(file="figs/hab662.pdf")
R> plot(ha.b662, firstweek=1, startyear = 2005,legend.opts=list(x="topleft",horiz=TRUE))
R> dev.off()
pdf 
  2 
R> 
R> 
R> ###################################################
R> ### chunk number 8: FACDC eval=FALSE
R> ###################################################
R> ## cntrl <- list(range = 300:400, m = 1, w = 3, b = 5, alpha = 0.01)
R> ## sps.cdc <- algo.cdc(sps, control = cntrl)
R> ## sps.farrington <- algo.farrington(sps, control = cntrl)
R> 
R> 
R> ###################################################
R> ### chunk number 9: 
R> ###################################################
R> cntrl <- list(range = 300:400, m = 1, w = 3, b = 5, alpha = 0.01)
R> sps.cdc <- algo.cdc(sps, control = cntrl)
R> sps.farrington <- algo.farrington(sps, control = cntrl)
R> 
R> 
R> ###################################################
R> ### chunk number 10: 
R> ###################################################
R> opendevice(file="figs/farringtoncdc.pdf")
R> par(mfcol = c(1, 2),cex=0.8)
R> plot(sps.cdc, legend = NULL, xaxis.years=FALSE)
R> plot(sps.farrington, legend = NULL, xaxis.years=FALSE)
R> dev.off()
pdf 
  2 
R> 
R> 
R> ###################################################
R> ### chunk number 11: CUSUM eval=FALSE
R> ###################################################
R> ## kh <- find.kh(ARLa=500,ARLr=7)
R> ## ha.cusum <- algo.cusum(aggregate(ha),control=list(k=kh$k,h=kh$h,m="glm",trans="rossi",range=209:290))
R> 
R> 
R> ###################################################
R> ### chunk number 12: 
R> ###################################################
R> opendevice(file="figs/hacusum.pdf")
R> kh <- find.kh(ARLa=500,ARLr=7)
Loading required namespace: spc
R> ha.cusum <- algo.cusum(aggregate(ha),control=list(k=kh$k,h=kh$h,m="glm",trans="rossi",range=209:290))
R> plot(ha.cusum,startyear=2005,legend.opts=list(x=30,y=5.5))
R> dev.off()
pdf 
  2 
R> 
R> #Extract coefficients
R> beta <- coef(ha.cusum$control$m.glm)
R> 
R> 
R> ###################################################
R> ### chunk number 13: 
R> ###################################################
R> print(algo.quality(ha.b662))
     TP FP TN FN Sens Spec dist mlag
[1,] 2  0  78 2  0.5  1    0.5  0   
R> 
R> 
R> ###################################################
R> ### chunk number 14: 
R> ###################################################
R> #This chunk contains stuff the reader should not see, but which is necessary 
R> #for the visual block to work.
R> control = list(
+   list(funcName = "rki1"),
+   list(funcName = "rki2"),
+   list(funcName = "rki3"),
+   list(funcName = "bayes1"),
+   list(funcName = "bayes2"),
+   list(funcName = "bayes3"),
+ #  list(funcName = "cdc",alpha=0.05,b=2,m=1),
+ #  list(funcName = "farrington",alpha=0.05,b=0,w=6),
+   list(funcName = "farrington",alpha=0.05,b=1,w=6),
+   list(funcName = "farrington",alpha=0.05,b=2,w=4))
R> control <- lapply(control,function(ctrl) {ctrl$range <- 300:400;return(ctrl)})
R> 
R> #Update range in each - cyclic continuation
R> data("k1")
R> range = (2*4*52) +  1:length(k1$observed)
R> aparv.control <- lapply(control,function(cntrl) { cntrl$range=range;return(cntrl)})
R> 
R> #Outbreaks
R> outbrks <- c("m1", "m2", "m3", "m4", "m5", "q1_nrwh", "q2", 
+               "s1", "s2", "s3", "k1", "n1", "n2", "h1_nrwrp")
R> 
R> #Load and enlarge data.
R> outbrks <- lapply(outbrks,function(name) {
+   #Load with data
+   eval(substitute(data(name),list(name=name)))
+   enlargeData(get(name),range=1:(4*52),times=2)
+ })
R> 
R> #Apply function to one
R> surv.one <- function(outbrk) {
+   algo.compare(algo.call(outbrk,control=aparv.control))
+ }
R> 
R> 
R> 
R> ###################################################
R> ### chunk number 15:  eval=FALSE
R> ###################################################
R> ## #Apply function to one
R> ## surv.one <- function(outbrk) {
R> ##   algo.compare(algo.call(outbrk,control=aparv.control))
R> ## }
R> ## 
R> ## algo.summary(lapply(outbrks, surv.one))
R> ## 
R> 
R> 
R> ###################################################
R> ### chunk number 16: ALGOSUMMARY
R> ###################################################
R> res <- algo.summary(lapply(outbrks,surv.one))
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
Warning: No convergence with timeTrend -- trying without.
There were 50 or more warnings (use warnings() to see the first 50)
R> 
R> 
R> ###################################################
R> ### chunk number 17: 
R> ###################################################
R> print(res,digits=3)
                   TP  FP   TN  FN  sens  spec  dist mlag
rki(6,6,0)         38  62 2646 180 0.174 0.977 0.826 5.43
rki(6,6,1)         65  83 2625 153 0.298 0.969 0.703 5.57
rki(4,0,2)         80 106 2602 138 0.367 0.961 0.634 5.43
bayes(6,6,0)       46 101 2607 172 0.211 0.963 0.790 4.07
bayes(6,6,1)       84 130 2578 134 0.385 0.952 0.617 2.21
bayes(4,0,2)      117 200 2508 101 0.537 0.926 0.469 1.93
farrington(6,0,1) 107 158 2550 111 0.491 0.942 0.513 3.86
farrington(4,0,2) 102 150 2558 116 0.468 0.945 0.535 3.50
R> 
R> 
R> ###################################################
R> ### chunk number 18:  eval=FALSE
R> ###################################################
R> ## setClass( "sts", representation(week = "numeric",
R> ##                                 freq = "numeric",
R> ##                                 start = "numeric",
R> ##                                 observed = "matrix",
R> ##                                 state = "matrix",
R> ##                                 alarm = "matrix",
R> ##                                 upperbound  = "matrix",
R> ##                                 neighbourhood= "matrix",
R> ##                                 populationFrac= "matrix",
R> ##                                 map = "SpatialPolygonsDataFrame",
R> ##                                 control = "list"))
R> ## 
R> 
R> 
R> ###################################################
R> ### chunk number 19: HA eval=FALSE
R> ###################################################
R> ## shp <- system.file("shapes/berlin.shp",package="surveillance")
R> ## ha <- disProg2sts(ha, map=maptools::readShapePoly(shp,IDvar="SNAME"))
R> ## plot(ha,type=observed ~ 1 | unit)
R> ## 
R> 
R> 
R> ###################################################
R> ### chunk number 20: 
R> ###################################################
R> opendevice(file="figs/ha-1unit.pdf",width=7,height=7)
R> par(mar=c(0,0,0,0))
R> shp <- system.file("shapes/berlin.shp",package="surveillance")
R> ha <- disProg2sts(ha, map=maptools::readShapePoly(shp,IDvar="SNAME"))
R> plot(ha,type=observed ~ 1 | unit)
R> 
R> dev.off()
pdf 
  2 
R> 
R> 
R> ###################################################
R> ### chunk number 21: HA:MAP eval=FALSE
R> ###################################################
R> ## ha4 <- aggregate(ha[,c("pank","mitt","frkr","scho","chwi","neuk")],nfreq=13)
R> ## ha4.cusum <- cusum(ha4,control=list(k=1.5,h=1.75,m="glm",trans="rossi",range=52:73))
R> ## #ha4.b332 <- bayes(ha4,control=list(range=52:73,b=2,w=3,alpha=0.01/6))
R> ## plot(ha4.cusum,type=observed ~ time | unit)
R> 
R> 
R> ###################################################
R> ### chunk number 22: 
R> ###################################################
R> opendevice(file="figs/ha-timeunit.pdf",width=7,height=5)
R> ha4 <- aggregate(ha[,c("pank","mitt","frkr","scho","chwi","neuk")],nfreq=13)
R> ha4.cusum <- cusum(ha4,control=list(k=1.5,h=1.75,m="glm",trans="rossi",range=52:73))
Running  algo.cusum  on area  1  out of  6 
Running  algo.cusum  on area  2  out of  6 
Running  algo.cusum  on area  3  out of  6 
Running  algo.cusum  on area  4  out of  6 
Running  algo.cusum  on area  5  out of  6 
Running  algo.cusum  on area  6  out of  6 
R> #ha4.b332 <- bayes(ha4,control=list(range=52:73,b=2,w=3,alpha=0.01/6))
R> plot(ha4.cusum,type=observed ~ time | unit)
R> dev.off()
pdf 
  2 
R> 
R> 
R> ## finally switch back to original working directory
R> message("Note: selected figures have been saved in ", getwd(), "/figs")
Note: selected figures have been saved in /tmp/RtmpFQg5j8/figs
R> setwd(OWD)
R> 
