
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.


   Hi You! Have Fun! :)


> 
> library("surveillance")
Loading required package: Rcpp
Loading required package: sp
Loading required package: spatstat
Loading required package: mgcv
This is mgcv 1.7-13. For overview type 'help("mgcv-package")'.
Loading required package: deldir
deldir 0.0-17

     Please note: The process for determining duplicated points
     has changed from that used in version 0.0-9 (and previously).

spatstat 1.26-1 
Type ‘help(spatstat)’ for an overview of spatstat 
     ‘latest.news()’ for news on latest version 
     ‘licence.polygons()’ for licence information on polygon calculations
spc package version 0.4.1
This is surveillance 1.4-0. For overview type ‘?surveillance’.

	Note: polygon geometry computations related to
	the "epidataCS" class in surveillance depend on
	the package gpclib, which has a restricted licence.
> library("splancs")

Spatial Point Pattern Analysis Code in S-Plus
 
 Version 2 - Spatial and Space-Time analysis

> data(burkitt)
> 
> 
> examplestcd <- function (seed)
+ {
+      set.seed(seed)
+      
+      # order the times
+      burkitt <- burkitt[order(burkitt$t), ]
+      
+      #Parameters for the SR detection
+      epsilon <- 0.5 # relative change within the cluster
+      radius <- 20 # radius
+      threshold <- 161 # threshold limit
+      
+      res <- stcd(x=burkitt$x,
+                  y=burkitt$y,
+                  t=burkitt$t,
+                  radius=radius,
+                  epsilon=epsilon,
+                  areaA=1,
+                  areaAcapBk=1,
+                  threshold=threshold)
+ }
> 
> 
> for (i in 1:100) {
+ 	cat(i, "...\n")
+ 	examplestcd(i)
+ }
1 ...
2 ...
3 ...
4 ...
5 ...
6 ...
7 ...
8 ...
9 ...
10 ...
11 ...
12 ...
13 ...
14 ...
15 ...
16 ...
17 ...
18 ...
19 ...
20 ...
21 ...
22 ...
23 ...
24 ...
25 ...
26 ...
27 ...
28 ...
29 ...
30 ...
31 ...
32 ...
33 ...
34 ...
35 ...
36 ...
37 ...
38 ...
39 ...
40 ...
41 ...
42 ...
43 ...
44 ...
45 ...
46 ...
47 ...
48 ...
49 ...
50 ...
51 ...
52 ...
53 ...
54 ...
55 ...
56 ...
57 ...
58 ...
59 ...
60 ...
61 ...
62 ...
63 ...
64 ...
65 ...
66 ...
67 ...
68 ...
69 ...
70 ...
71 ...
72 ...
73 ...
74 ...
75 ...
76 ...
77 ...
78 ...
79 ...
80 ...
81 ...
82 ...
83 ...
84 ...
85 ...
86 ...
87 ...
88 ...
89 ...
90 ...
91 ...
92 ...
93 ...
94 ...
95 ...
96 ...
97 ...
98 ...
99 ...
100 ...
> 
> 

   Nice Job!   Bye!


> proc.time()
   user  system elapsed 
  3.216   0.052   3.266 
