1.0-2 (released on CRAN 6 Mar 2009)
===========================

* Negative Binomial CUSUM or the more general NegBin likelihood ratio
  detector is now implemented as part of algo.glrnb.
  This includes the back calculation of the required number of cases
  before an alarm.

* Time varying proportion binomial CUSUM.

0.9-10
======

* Current status: Development version available from
  http://surveillance.r-forge.r-project.org/

* Rewriting of the plot.sts.time.one function to use polygons
  instead of lines for the number of observed cases. Due cause
  a number of problems were fixed in the plotting of the legend.
  Plotting routine now also handles binomial data, where the
  number of observed cases y are stored in "observed" and the
  denominator data n are stored in "populationFrac".

* Problems with the aggregate function not operating correctly
  for the populationFrac were fixed.

* The "rogerson" wrapper function for algo.rogerson was modified so it
  now works better for distribution "binomial". Thus a time varying
  binomial cusum can be run by calling

       rogerson( x, control(..., distribution="binomial"))

* An experimental implementation of the twins model documented in 
  Held, L., Hofmann, M., HÅˆhle, M. and Schmid V. (2006) A two-component
  model for counts of infectious diseases, Biostatistics, 7, pp.
  422--437 is now available as algo.twins.


0.9-9 
=====

* CRAN release 21 Jan 2008. Fixed a few small problems 
  which gave warnings in the CRAN distribution


0.9-8 
=====
* Released on CRAN: 21 Jan 2008

* The algo_glrpois function now has an additional "ret" arguments,
  where one specifies the return type. The arguments of the underlying
  c functions have been changed to include an additional direction and
  return type value arguments.

* added restart argument to the algo.glrpois control object, which
allows the user to control what happens after the first alarm has been
generated

* experimental algo.glrnb function is added to the package. All calls to
algo.glrpois are now just alpha=0 calls to this function. However, 
the underlying C functions differentiate between poisson and negative case
